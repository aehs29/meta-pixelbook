steps:
- bash: |
    ###
    ###  Set kernel
    ###
    case ${{ parameters.kernel }} in
        yocto )
            echo "##vso[task.setvariable variable=kernel;]linux-yocto"
            ;;
        intel )
            echo "##vso[task.setvariable variable=kernel;]linux-intel"
            ;;
        chromium )
            echo "##vso[task.setvariable variable=kernel;]linux-chromium"
            ;;
        *)
            echo "Unknown kernel requested"
            exit 1
            ;;
    esac

    ###
    ###  Set MACHINE
    ###
    case ${{ parameters.machine }} in
        eve )
            echo "##vso[task.setvariable variable=machine;]eve-chromebook"
            ;;
        x86 )
            echo "##vso[task.setvariable variable=machine;]x86-chromebook"
            ;;
        mediatek8173 )
            echo "##vso[task.setvariable variable=machine;]mediatek8173-chromebook"
            ;;
        *)
            echo "Unknown MACHINE requested"
            exit 1
            ;;
    esac
  displayName: 'Set global variables'

- bash: |
    git clone https://www.github.com/aehs29/azp-scripts/
    chmod +x azp-scripts/azp-helpers.sh
    source azp-scripts/azp-helpers.sh
    check_freespace
    free_space_packages
    setup_yp_deps
    check_freespace
    # analyze_storage
    cleanup_leftover_deps
    purge_space
    check_freespace
    create_local_dirs
  displayName: 'Setup container'

- bash: |
    source azp-scripts/azp-helpers.sh
    BRANCH=${BUILDBRANCH} clone_layers poky intel oe
  continueOnError: false
  displayName: 'Clone Repositories'

- bash: |
    source azp-scripts/azp-helpers.sh
    DISTRO="chronos" AZ_SAS="$(SAS_TOKEN)" RMWORK="0" localconf
    SELF="$(Build.SourcesDirectory)" add_layers intel oe python networking
  continueOnError: false
  displayName: 'Create bitbake configuration'
