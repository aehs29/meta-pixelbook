steps:
- bash: |
    # echo "##vso[task.setvariable variable=buildbranch;]${{ parameters.build_branch }}"
    # echo "##vso[task.setvariable variable=kernel;]${{ parameters.kernel }}"
    # echo "##vso[task.setvariable variable=machine;]${{ parameters.machine }}"
        ###
    ###  Set kernel
    ###
    if [ ${{ parameters.kernel }} == "yocto" ]; then
      echo "##vso[task.setvariable variable=kernel;]linux-yocto"
    fi
    if [ ${{ parameters.kernel }} == "intel" ]; then
      echo "##vso[task.setvariable variable=kernel;]linux-intel"
    fi
    if [ ${{ parameters.kernel }} == "chromium" ]; then
      echo "##vso[task.setvariable variable=kernel;]linux-chromium"
    fi
    ###
    ###  Set MACHINE
    ###
    if [ ${{ parameters.machine }} == "eve" ]; then
      echo "##vso[task.setvariable variable=machine;]eve-chromebook"
    fi
    if [ ${{ parameters.machine }} == "x86" ]; then
      echo "##vso[task.setvariable variable=machine;]x86-chromebook"
    fi
    if [ ${{ parameters.machine }} == "mediatek8173" ]; then
      echo "##vso[task.setvariable variable=machine;]mediatek8173-chromebook"
    fi
  displayName: 'Setup globals'
- bash: |
    git clone https://www.github.com/aehs29/azp-scripts/
    chmod +x azp-scripts/azp_setup.sh
    source azp-scripts/azp_setup.sh
    # check_freespace
    # free_space_packages
    setup_yp_deps
    # check_freespace
    # analyze_storage
    # cleanup_leftover_deps
    # purge_space
    create_local_dirs
  displayName: 'Setup with helper script'

- bash: |    
    source azp-scripts/azp_setup.sh
    BRANCH=${BUILDBRANCH} clone_layers poky intel oe
  continueOnError: false
  displayName: 'Clone Repositories'

- bash: |
    source azp-scripts/azp_setup.sh
    DISTRO="chronos" AZ_SAS="$(SAS_TOKEN)" RMWORK="0" localconf
    SELF="$(Build.SourcesDirectory)" add_layers intel oe python networking
  continueOnError: false
  displayName: 'Create bitbake configuration'